def versions = [:]
versions.android_gradle_plugin = '7.2.2'
versions.kotlin = "1.6.10"

versions.retrofit = "2.9.0"
versions.picasso = '2.71828'
versions.okhttp = '5.0.0-alpha.10'
versions.room = "2.4.2"
versions.gson = '2.9.1'
versions.glide = "4.13.0"
versions.android_lifecycle = '2.5.1'
versions.android_navigation = '2.5.2'
versions.koin = '3.2.2'
versions.androidx_core = "1.9.0"
versions.constraint_layout = '2.1.4'
versions.app_compat = "1.5.1"
versions.google_material = '1.6.1'
versions.junit = "4.+"
versions.junit_ext = "1.1.3"
versions.expresso = "3.4.0"
versions.google_map_plugin = "2.0.0"
versions.google_map = "18.0.2"
versions.security_crypto_ktx = "1.1.0-alpha03"
versions.google_service_location = "19.0.1"
versions.worker_manager = "2.7.1"
versions.sentry = "5.7.0"
versions.flexbox = "3.0.0"
versions.asyncInflater = "1.0.0"
versions.batch = "1.19+"
versions.google_services = "4.3.10"
versions.firebase_core = "19.0.0"
versions.firebase_msg = "22.0.0"
versions.socketio = "2.0.1"
versions.swipe_layout = "1.2.0@aar"
versions.kotlin_coroutine = "1.6.4"

ext.versions = versions

def deps = [:]

def android_gradle_plugin = [:]
android_gradle_plugin.plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.android_gradle_plugin = android_gradle_plugin

def kotlin = [:]
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.coroutine = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutine"
deps.kotlin = kotlin

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def okhttp = [:]
okhttp.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.kotlin_ext = "androidx.room:room-ktx:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava3:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def gson = [:]
gson.gson = "com.google.code.gson:gson:$versions.gson"
deps.gson = gson

def glide = [:]
glide.glide = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def android_lifecycle = [:]
android_lifecycle.common = "androidx.lifecycle:lifecycle-common:$versions.android_lifecycle"
android_lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.android_lifecycle"
android_lifecycle.runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$versions.android_lifecycle"
android_lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.android_lifecycle"
deps.android_lifecycle = android_lifecycle

def androidx_navigation = [:]
androidx_navigation.nav_fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.android_navigation"
androidx_navigation.nav_ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.android_navigation"
deps.androidx_navigation = androidx_navigation

def koin = [:]
koin.koin = "io.insert-koin:koin-android:$versions.koin"
koin.navigation = "io.insert-koin:koin-androidx-navigation:$versions.koin"
deps.koin = koin

def androidx_core = [:]
androidx_core.androidx_core = "androidx.core:core-ktx:$versions.androidx_core"
deps.androidx_core = androidx_core

def constraint_layout = [:]
constraint_layout.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.constraint_layout = constraint_layout

def app_compat = [:]
app_compat.app_compat = "androidx.appcompat:appcompat:$versions.app_compat"
deps.app_compat = app_compat

def google_material = [:]
google_material.google_material = "com.google.android.material:material:$versions.google_material"
deps.google_material = google_material

def test = [:]
test.junit = "junit:junit:$versions.junit"
test.junit_ext = "androidx.test.ext:junit:$versions.junit_ext"
test.expresso_core = "androidx.test.espresso:espresso-core:$versions.expresso"
deps.test = test

def google_map = [:]
google_map.google_map = "com.google.android.gms:play-services-maps:$versions.google_map"
google_map.google_map_plugin = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin:secrets-gradle-plugin:$versions.google_map_plugin"
deps.google_map = google_map

def play_services = [:]
play_services.location = "com.google.android.gms:play-services-location:$versions.google_service_location"
deps.play_services = play_services

def security_crypto_ktx = [:]
security_crypto_ktx.security_crypto_ktx = "androidx.security:security-crypto-ktx:$versions.security_crypto_ktx"
deps.security_crypto_ktx = security_crypto_ktx

def worker_manager = [:]
worker_manager.worker_manager = "androidx.work:work-runtime-ktx:$versions.worker_manager"
deps.worker_manager = worker_manager

def sentry = [:]
sentry.sentry = "io.sentry:sentry-android:$versions.sentry"
deps.sentry = sentry

def flexbox = [:]
flexbox.flexbox = "com.google.android.flexbox:flexbox:$versions.flexbox"
deps.flexbox = flexbox

def asyncInflater = [:]
asyncInflater.asyncInflater = "androidx.asynclayoutinflater:asynclayoutinflater:$versions.asyncInflater"
deps.asyncInflater = asyncInflater

def batch = [:]
batch.batch_sdk = "com.batch.android:batch-sdk:$versions.batch"
deps.batch = batch

def google_service = [:]
google_service.google_service = "com.google.gms:google-services:$versions.google_services"
deps.google_service = google_service

def firebase = [:]
firebase.firebase_core = "com.google.firebase:firebase-core:$versions.firebase_core"
firebase.firebase_messaging = "com.google.firebase:firebase-messaging:$versions.firebase_msg"
deps.firebase = firebase

def socketio = [:]
socketio.socketio = "io.socket:socket.io-client:$versions.socketio"
deps.socketio = socketio

def swipe_layout = [:]
swipe_layout.swipe_layout = "com.daimajia.swipelayout:library:$versions.swipe_layout"
deps.swipe_layout = swipe_layout

ext.deps = deps